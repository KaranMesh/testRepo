name: Merge Latest Release to Develop

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every day at midnight
  push:
    branches:
      - main 

jobs:
  merge-release-to-develop:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout dm-parent
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_PAT }}
          repository: KaranMesh/testrepo2
          path: testrepo2
      - name: Find latest release branch
        id: latest-release
        run: |
          cd testrepo2
          git fetch --all
          LATEST_RELEASE=$(git for-each-ref --format="%(refname:short)" | grep -E 'origin/release/[0-9]{4}-[0-9]{2}-[0-9]{2}' | sed 's/^origin\///' | sort -r | head -n 1)
          echo "::set-output name=latest_release::$LATEST_RELEASE"

      - name: Merge latest release into develop
        run: |
          cd testrepo2
          LATEST_RELEASE=${{ steps.latest-release.outputs.latest_release }}
          if [ -n "$LATEST_RELEASE" ]; then
            git checkout $LATEST_RELEASE
            git checkout temp/develop
            if git merge --no-ff $LATEST_RELEASE; then
              git push origin temp/develop
              echo "Merged $LATEST_RELEASE into develop"
            else
              echo "Merge conflict detected. Sending Slack message..."
              SLACK_MESSAGE="Merge conflict detected while merging $LATEST_RELEASE into develop. Please resolve the conflict."
              curl -X POST -H 'Content-type: application/json' --data "{'text':'$SLACK_MESSAGE'}" ${{ secrets.SLACK_WEBHOOK_URL }}
              exit 1  # Exit with a non-zero status code to indicate failure
            fi
          else
            echo "No release branches found to merge."
          fi
